@model AirportSystem.Models.Schedule

@{
	var db = new AirportSystem.Models.AirportDBContainer();
}
@using (Html.BeginForm("_AddSchedule", "Shared")) { //TODO Fix the pathing
	@Html.AntiForgeryToken()

	<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#AddSchedule">Add Schedule</button>

	<div class="modal" role="dialog" id="AddSchedule" tabindex="-1" aria-labelledby="meh">
		<div class="modal-dialog modal-lg" role="document">
			<div class="form-horizontal modal-body modal-content">
				<h4>Schedule</h4>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.FromAirportId, "FromAirportId", htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("FromAirportId", new SelectList(db.Airports, "Id", "Name"), "From", htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.FromAirportId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ToAirportId, "ToAirportId", htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("ToAirportId", new SelectList(db.Airports, "Id", "Name"), "To", htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.ToAirportId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AirplaneRegNumber, "AirplaneRegNumber", htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("AirplaneRegNumber", new SelectList(db.Airplanes, "RegNumber", "RegNumber"), "PlaneRegnr", htmlAttributes: new { id = "apForm", @class = "form-control" })
						@Html.ValidationMessageFor(model => model.AirplaneRegNumber, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.PilotId, "PilotId", htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						<select id="PilotList" name="PilotId" class="form-control" disabled=true>
							<option>Pilot</option>
						</select>
						@Html.ValidationMessageFor(model => model.PilotId, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.PilotIdCo, "PilotIdCo", htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.DropDownList("PilotIdCo", new SelectList(db.PilotSet, "Id", "FullName"), "CoPilot", htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.PilotIdCo, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ETA, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.ETA, new { htmlAttributes = new { @class = "form-control date-Picker" } })
						@Html.ValidationMessageFor(model => model.ETA, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ETD, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.ETD, new { htmlAttributes = new { @class = "form-control date-Picker" } })
						@Html.ValidationMessageFor(model => model.ETD, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-9">
						<input type="submit" value="Create" class="btn btn-default" />
					</div>
				</div>
			</div>
		</div>
	</div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link href="~/Content/bootstrap-datepicker.standalone.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script>
	$('.date-Picker').datepicker({
	});
</script>
<script>
	console.log("LOGED");
	$("#apForm").click(function () {
		console.log("Clicked" + $("#apForm").val());
		if ($("#apForm").val() != '') {
			PopulateList($("#apForm").val());
		} else {
			$("#PilotList").prop("disabled", true);
		}

	});

	function PopulateList(apRegNr) {
		console.log("populateList");

		$("#PilotList").empty();
		$("#PilotList").append("<option selected>Pilot</option>");

		$.ajax({
			dataType: "json",
			url: "/api/qualifiedPilots/"+ apRegNr,
			success: function (d) {
				console.log("SUCCESS");
				$("#PilotList").prop("disabled", false);
				$.each(d, function (key, item) {
					$("<option value='" + key + "'>" + item + "</options>").appendTo("#PilotList");
				});
			},
			error: function () {
				console.log("ERROR");
				$('#PilotList').prop("disabled", true);
			}
		});
	}
</script>